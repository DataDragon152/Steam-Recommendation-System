{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyPfmSSxZLj56IzrlQRhPFni"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":22,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zFgShIPxhi0B","executionInfo":{"status":"ok","timestamp":1745913132051,"user_tz":-420,"elapsed":5500,"user":{"displayName":"Long Nguyen","userId":"14589141717299064407"}},"outputId":"b37f1edf-765f-43a5-aba2-c1cf9c6f260e"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive', force_remount=True)"]},{"cell_type":"code","source":["import pandas as pd\n","import os\n","import re\n","import math"],"metadata":{"id":"2TcxTOOrhq_C","executionInfo":{"status":"ok","timestamp":1745913132054,"user_tz":-420,"elapsed":6,"user":{"displayName":"Long Nguyen","userId":"14589141717299064407"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","source":["def load_cleaned_batch(batch_number, cleaned_folder_path='/content/drive/MyDrive/Steam Analysis/Cleaned Data/'):\n","    \"\"\"\n","    Loads a 20-file batch from the cleaned data folder.\n","    :param batch_number: 1-based index of the batch (e.g., 1 = first 20 files, 2 = next 20, ...)\n","    :param cleaned_folder_path: path to the folder containing cleaned_part*_filtered.csv files\n","    :return: concatenated DataFrame of the batch\n","    \"\"\"\n","    # Match files like cleaned_part1_filtered.csv or cleaned_part01_filtered.csv\n","    file_pattern = re.compile(r'cleaned_part(\\d+)_filtered\\.csv')\n","    all_files = []\n","\n","    for file_name in os.listdir(cleaned_folder_path):\n","        match = file_pattern.match(file_name)\n","        if match:\n","            part_num = int(match.group(1))\n","            all_files.append((part_num, file_name))\n","\n","    # Sort files numerically by part number\n","    all_files.sort()\n","\n","    # Determine start and end index\n","    batch_size = 20\n","    start_index = (batch_number - 1) * batch_size\n","    end_index = start_index + batch_size\n","    batch_files = all_files[start_index:end_index]\n","\n","    # Load and concatenate\n","    batch_dataframes = []\n","    for part_num, file in batch_files:\n","        file_path = os.path.join(cleaned_folder_path, file)\n","        df = pd.read_csv(file_path)\n","        batch_dataframes.append(df)\n","\n","    if not batch_dataframes:\n","        print(f\"⚠️ No files found for batch {batch_number}\")\n","        return pd.DataFrame()  # Empty DataFrame\n","\n","    combined_df = pd.concat(batch_dataframes, ignore_index=True)\n","    print(f\"✅ Loaded batch {batch_number} with {len(combined_df)} reviews from {len(batch_files)} files.\")\n","    return combined_df"],"metadata":{"id":"fE8E9tNuhrBY","executionInfo":{"status":"ok","timestamp":1745913132056,"user_tz":-420,"elapsed":7,"user":{"displayName":"Long Nguyen","userId":"14589141717299064407"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["batch_df = load_cleaned_batch(6)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"vU4Lch4m2sTv","executionInfo":{"status":"ok","timestamp":1745913279842,"user_tz":-420,"elapsed":24811,"user":{"displayName":"Long Nguyen","userId":"14589141717299064407"}},"outputId":"e7105278-9afa-4cd0-fd3c-0ce903142f22"},"execution_count":28,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12,13,14) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12,13,14) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12,13,14) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12,13,14,15,16,17,18,19,20,21) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12,13,14,15,16,17,18,19,20,21,22) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12,13) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12,13,14) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n","<ipython-input-24-0ec6fee97e78>:31: DtypeWarning: Columns (12,13,14) have mixed types. Specify dtype option on import or set low_memory=False.\n","  df = pd.read_csv(file_path)\n"]},{"output_type":"stream","name":"stdout","text":["✅ Loaded batch 6 with 2511826 reviews from 14 files.\n"]}]},{"cell_type":"code","source":["# Example: Add batch tag\n","batch_df['batch'] = 11\n","\n","# Process it, save it, or continue working...\n","batch_df.to_csv('/content/drive/MyDrive/Steam Analysis/Batched Output/batch_11_modified.csv', index=False)"],"metadata":{"id":"TRPaYsQThrLf","executionInfo":{"status":"ok","timestamp":1745913333465,"user_tz":-420,"elapsed":53605,"user":{"displayName":"Long Nguyen","userId":"14589141717299064407"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["batch_df.head()"],"metadata":{"id":"flRhPUQWhrNn","executionInfo":{"status":"ok","timestamp":1745913333483,"user_tz":-420,"elapsed":14,"user":{"displayName":"Long Nguyen","userId":"14589141717299064407"}},"colab":{"base_uri":"https://localhost:8080/","height":342},"outputId":"27ea8ee3-8c74-44f8-e890-af56d4851f8e"},"execution_count":30,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   recommendationid  appid              game     author_steamid  \\\n","0          62124858    730  Counter-Strike 2  76561198368810003   \n","1          62124784    730  Counter-Strike 2  76561198272851261   \n","2          62124478    730  Counter-Strike 2  76561198075919109   \n","3          62124414    730  Counter-Strike 2  76561198289534560   \n","4          62124299    730  Counter-Strike 2  76561198160000280   \n","\n","   author_num_games_owned  author_num_reviews  author_playtime_forever  \\\n","0                      27                  12                  29913.0   \n","1                       0                   2                   2753.0   \n","2                       0                   5                 174191.0   \n","3                      49                  13                  20846.0   \n","4                       0                   1                  16157.0   \n","\n","   author_playtime_last_two_weeks  author_playtime_at_review  \\\n","0                             0.0                      925.0   \n","1                             0.0                     1919.0   \n","2                             0.0                    77124.0   \n","3                            51.0                     6766.0   \n","4                             0.0                    13834.0   \n","\n","   author_last_played  ... votes_up votes_funny weighted_vote_score  \\\n","0        1.655983e+09  ...        0           0                 0.0   \n","1        1.650313e+09  ...        1           0             0.52381   \n","2        1.695919e+09  ...        1           0            0.504351   \n","3        1.698402e+09  ...        0           0                 0.0   \n","4        1.644627e+09  ...        0           0                 0.0   \n","\n","  comment_count steam_purchase received_for_free written_during_early_access  \\\n","0           0.0              1               1.0                           0   \n","1           0.0              0               1.0                           0   \n","2           0.0              0               0.0                           0   \n","3           0.0              0               0.0                           0   \n","4           0.0              0               0.0                           0   \n","\n","  hidden_in_steam_china steam_china_location batch  \n","0                     0                  NaN    11  \n","1                     0                  NaN    11  \n","2                     0                  NaN    11  \n","3                     0                  NaN    11  \n","4                     0                  NaN    11  \n","\n","[5 rows x 25 columns]"],"text/html":["\n","  <div id=\"df-00340ad4-24b5-4473-9117-cded4c01e964\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>recommendationid</th>\n","      <th>appid</th>\n","      <th>game</th>\n","      <th>author_steamid</th>\n","      <th>author_num_games_owned</th>\n","      <th>author_num_reviews</th>\n","      <th>author_playtime_forever</th>\n","      <th>author_playtime_last_two_weeks</th>\n","      <th>author_playtime_at_review</th>\n","      <th>author_last_played</th>\n","      <th>...</th>\n","      <th>votes_up</th>\n","      <th>votes_funny</th>\n","      <th>weighted_vote_score</th>\n","      <th>comment_count</th>\n","      <th>steam_purchase</th>\n","      <th>received_for_free</th>\n","      <th>written_during_early_access</th>\n","      <th>hidden_in_steam_china</th>\n","      <th>steam_china_location</th>\n","      <th>batch</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>62124858</td>\n","      <td>730</td>\n","      <td>Counter-Strike 2</td>\n","      <td>76561198368810003</td>\n","      <td>27</td>\n","      <td>12</td>\n","      <td>29913.0</td>\n","      <td>0.0</td>\n","      <td>925.0</td>\n","      <td>1.655983e+09</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>1</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>62124784</td>\n","      <td>730</td>\n","      <td>Counter-Strike 2</td>\n","      <td>76561198272851261</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>2753.0</td>\n","      <td>0.0</td>\n","      <td>1919.0</td>\n","      <td>1.650313e+09</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.52381</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>62124478</td>\n","      <td>730</td>\n","      <td>Counter-Strike 2</td>\n","      <td>76561198075919109</td>\n","      <td>0</td>\n","      <td>5</td>\n","      <td>174191.0</td>\n","      <td>0.0</td>\n","      <td>77124.0</td>\n","      <td>1.695919e+09</td>\n","      <td>...</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0.504351</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>62124414</td>\n","      <td>730</td>\n","      <td>Counter-Strike 2</td>\n","      <td>76561198289534560</td>\n","      <td>49</td>\n","      <td>13</td>\n","      <td>20846.0</td>\n","      <td>51.0</td>\n","      <td>6766.0</td>\n","      <td>1.698402e+09</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>62124299</td>\n","      <td>730</td>\n","      <td>Counter-Strike 2</td>\n","      <td>76561198160000280</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>16157.0</td>\n","      <td>0.0</td>\n","      <td>13834.0</td>\n","      <td>1.644627e+09</td>\n","      <td>...</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>NaN</td>\n","      <td>11</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 25 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-00340ad4-24b5-4473-9117-cded4c01e964')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-00340ad4-24b5-4473-9117-cded4c01e964 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-00340ad4-24b5-4473-9117-cded4c01e964');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-1e883233-97ef-40df-99bb-473839e60f57\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-1e883233-97ef-40df-99bb-473839e60f57')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-1e883233-97ef-40df-99bb-473839e60f57 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"batch_df"}},"metadata":{},"execution_count":30}]},{"cell_type":"code","source":[],"metadata":{"id":"Si4PxYEva16F","executionInfo":{"status":"ok","timestamp":1745913132395,"user_tz":-420,"elapsed":5,"user":{"displayName":"Long Nguyen","userId":"14589141717299064407"}}},"execution_count":27,"outputs":[]}]}